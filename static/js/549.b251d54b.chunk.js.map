{"version":3,"file":"static/js/549.b251d54b.chunk.js","mappings":"ySAEaA,EAAUC,EAAAA,GAAAA,QAAH,gFAMPC,EAAYD,EAAAA,GAAAA,IAAH,+IAQTE,EAAKF,EAAAA,GAAAA,GAAH,0EAMFG,EAAOH,EAAAA,GAAAA,KAAH,gE,SClBF,SAASI,EAAT,GASX,IAAD,IARDC,KACEC,EAOD,EAPCA,YACAC,EAMD,EANCA,eACAC,EAKD,EALCA,aACAC,EAID,EAJCA,aACAC,EAGD,EAHCA,SACAC,EAED,EAFCA,OAIF,OACE,UAACZ,EAAD,YACE,gBACEa,IAAG,0CAAqCN,GACxCO,IAAKN,KAEP,UAACN,EAAD,YACE,0BACGM,EADH,MACoB,0BAAOC,EAAaM,MAAM,EAAG,KADjD,QAGA,wCAA+B,GAAfL,EAAhB,QACA,UAACP,EAAD,YACE,2BACE,sCACA,uBAAIQ,QAEN,2BACE,oCACA,uBACGC,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,SAACd,EAAD,UAAgBc,GAALD,oB,4BC/BdE,GAAYlB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,kOAcToB,EAAOpB,EAAAA,GAAAA,KAAH,mEAKJqB,GAAerB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAH,sGASZuB,EAAMvB,EAAAA,GAAAA,IAAH,8CAIHE,EAAKF,EAAAA,GAAAA,GAAH,4DAKFwB,EAAKxB,EAAAA,GAAAA,GAAH,+DAMFyB,EAAIzB,EAAAA,GAAAA,EAAH,6CC7BC,SAAS0B,IAAY,IAAD,IACzBC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOxB,EAAP,KAAayB,EAAb,KAEIC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA8Bf,OA5BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAiBT,GAFxC,OAEUtB,EAFV,OAGIyB,EAAQzB,GAHZ,gDAKIgC,EAAAA,GAAAA,MAAY,mIACZC,YAAW,kBAAMP,EAAS,OAAM,KANpC,0DADc,uBAAC,WAAD,wBAUdQ,KACC,CAACZ,EAAQI,KAkBV,UAACX,EAAD,WACGf,IACC,SAACa,EAAD,CAAWsB,GAAE,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAUQ,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAxC,mCAEArC,IAAQ,SAACsC,EAAA,EAAD,IAETtC,IAAQ,SAACD,EAAD,CAAaC,KAAMA,IAC3BA,IACC,iCACE,mBACA,UAACkB,EAAD,YACE,SAACE,EAAD,sCACA,UAAC,EAAD,YACE,SAACD,EAAD,WACE,SAACH,EAAD,CAAcmB,GAAG,OAAjB,qBAEF,SAAChB,EAAD,WACE,SAACH,EAAD,CAAcmB,GAAG,UAAjB,8BAIN,sBAIJ,SAAC,KAAD,S,0MC7EAI,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,sCAAyCF,IAD3D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAIA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAAgCpB,GAAhC,uFACkB8B,IAAAA,IAAA,iBAAoB9B,EAApB,oBAAkC4B,IADpD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlC,GAA9B,uFACkB8B,IAAAA,IAAA,iBAAoB9B,EAApB,4BAA0C4B,IAD5D,cACCG,EADD,yBAEEA,EAASC,KAAKG,MAFhB,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BpC,GAA9B,uFACkB8B,IAAAA,IAAA,iBAAoB9B,EAApB,4BAA0C4B,IAD5D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAIA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BhD,GAA7B,uFACkByC,IAAAA,IAAA,gCACIF,EADJ,kBACqBvC,IAFvC,cACC0C,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAlBPH,IAAAA,SAAAA,QAAyB","sources":["components/ItemPage/Publication/Publication.styled.js","components/ItemPage/Publication/Publication.jsx","components/ItemPage/ItemPage.styled.js","components/ItemPage/ItemPage.jsx","services/axiosApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Article = styled.article`\n  display: flex;\n  margin-top: 20px;\n  width: 700px;\n`;\n\nexport const Container = styled.div`\n  box-shadow: 0 0 5px;\n  border-radius: 5px;\n  margin-left: 10px;\n  padding: 0 10px;\n  background-color: #ededed;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Span = styled.span`\n  & + & {\n    margin-left: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Span, Article, Container, Ul } from './Publication.styled';\n\nexport default function Publication({\n  item: {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  },\n}) {\n  // console.log(item);\n  return (\n    <Article>\n      <img\n        src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n        alt={original_title}\n      />\n      <Container>\n        <h2>\n          {original_title} (<span>{release_date.slice(0, 4)}</span>)\n        </h2>\n        <p>User score: {vote_average * 10}%</p>\n        <Ul>\n          <li>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </li>\n          <li>\n            <h3>Genres</h3>\n            <p>\n              {genres.map(({ id, name }) => (\n                <Span key={id}>{name}</Span>\n              ))}\n            </p>\n          </li>\n        </Ul>\n      </Container>\n    </Article>\n  );\n}\n\nPublication.propTypes = {\n  item: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n","import styled from 'styled-components';\n\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const StyleLink = styled(Link)`\n  padding: 5px;\n  text-decoration: none;\n  border-radius: 3px;\n  border: none;\n  color: #ffff;\n  background-color: #fa6464;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #ff4747;\n  }\n`;\n\nexport const Main = styled.main`\n  margin-top: 13px;\n  margin-left: 10px;\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\n  color: #000;\n  font-weight: 500;\n\n  &.active {\n    color: tomato;\n  }\n`;\n\nexport const Div = styled.div`\n  margin-left: 20px;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const Li = styled.li`\n  & + & {\n    margin-top: 10px;\n  }\n`;\n\nexport const P = styled.p`\n  font-weight: 700;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nimport { getTrendFilmById } from '../../services/axiosApi';\nimport { LoaderSpiner } from 'components/Loader/Loader';\nimport Publication from './Publication/Publication';\n\nimport {\n  Main,\n  StyleLink,\n  NavLinkStyle,\n  Div,\n  P,\n  Ul,\n  Li,\n} from './ItemPage.styled';\n\nexport default function ItemPage() {\n  const { itemId } = useParams();\n  const [item, setItem] = useState(null);\n\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  useEffect(() => {\n    async function getFetcheFilms() {\n      try {\n        const item = await getTrendFilmById(itemId);\n        setItem(item);\n      } catch (error) {\n        toast.error('Фильм с таким ID не найдено');\n        setTimeout(() => navigate('/'), 1000);\n      }\n    }\n    getFetcheFilms();\n  }, [itemId, navigate]);\n\n  // const onClickBtnBack = () => {\n\n  // if (location.pathname === `/movies/${item.id}`) {\n  //   navigate(-1);\n  //   return;\n  // } else if (location.pathname === `/movies/${item.id}/cast`) {\n  //   navigate(-2);\n  //   return;\n  // } else if (location.pathname === `/movies/${item.id}/reviews`) {\n  //   navigate(-2);\n  //   return;\n  // }\n  // navigate('/');\n  // };\n\n  return (\n    <Main>\n      {item && (\n        <StyleLink to={location?.state?.from ?? '/'}>🔙 Go back</StyleLink>\n      )}\n      {!item && <LoaderSpiner />}\n\n      {item && <Publication item={item} />}\n      {item && (\n        <>\n          <hr />\n          <Div>\n            <P>Additional Information</P>\n            <Ul>\n              <Li>\n                <NavLinkStyle to=\"cast\">Cast</NavLinkStyle>\n              </Li>\n              <Li>\n                <NavLinkStyle to=\"reviews\">Reviews</NavLinkStyle>\n              </Li>\n            </Ul>\n          </Div>\n          <hr />\n        </>\n      )}\n\n      <Outlet />\n    </Main>\n  );\n}\n","import axios from 'axios';\n\nconst KEY_API = 'a8a4168eeeb623f39ee02028275e7a3e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendFilms() {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n  return response.data.results;\n}\nexport async function getTrendFilmById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${KEY_API}`);\n  return response.data;\n}\nexport async function getCreditsById(id) {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${KEY_API}`);\n  return response.data.cast;\n}\nexport async function getReviewsById(id) {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${KEY_API}`);\n  return response.data.results;\n}\nexport async function getFetchFilms(item) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY_API}&query=${item}`\n  );\n  return response.data.results;\n}\n"],"names":["Article","styled","Container","Ul","Span","Publication","item","poster_path","original_title","release_date","vote_average","overview","genres","src","alt","slice","map","id","name","StyleLink","Link","Main","NavLinkStyle","NavLink","Div","Li","P","ItemPage","itemId","useParams","useState","setItem","navigate","useNavigate","location","useLocation","useEffect","getTrendFilmById","toast","setTimeout","getFetcheFilms","to","state","from","Loader","KEY_API","getTrendFilms","axios","response","data","results","getCreditsById","cast","getReviewsById","getFetchFilms"],"sourceRoot":""}