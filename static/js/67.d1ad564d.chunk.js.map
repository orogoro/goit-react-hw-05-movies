{"version":3,"file":"static/js/67.d1ad564d.chunk.js","mappings":"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","sources":["components/MoviesPage/MovieDetails/MovieDetails.styled.js","components/MoviesPage/MovieDetails/MovieDetails.jsx","components/MoviesPage/QueryFilms/QueryFilms.styled.js","components/MoviesPage/QueryFilms/QueryFilms.jsx","components/MoviesPage/MoviesPage.jsx","services/axiosApi.js"],"sourcesContent":["import styled from 'styled-components';\n// import { Form, Field } from 'formik';\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 5px;\n  font-size: 15px;\n`;\n\nexport const Form = styled.form`\n  width: 350px;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n  margin-left: 10px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  margin-left: 5px;\n  background-color: #6360f7;\n  color: #fff;\n  border: none;\n  border-radius: 2px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #3936f5;\n  }\n`;\n\n// export const P = styled.p`\n//   color: red;\n//   margin-top: 5px;\n// `;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport toast from 'react-hot-toast';\n\nimport { Input, Form, Button } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentSearch = searchParams.get('query');\n  const [value, setValue] = useState(currentSearch ?? '');\n\n  const handleInputChange = e => {\n    setValue(e.currentTarget.value.toLowerCase());\n  };\n\n  const searchQuery = name => {\n    setSearchParams({ query: name });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!value) {\n      toast.error('BÑ‹ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð²Ð²ÐµÐ»Ð¸');\n      return;\n    }\n    searchQuery(value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={handleInputChange}\n        autoComplete=\"off\"\n      />\n\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n}\n\n// const [value, setValue] = useState('');\n// const [qwery, setQwery] = useState('');\n// const [films, setFilms] = useState([]);\n\n// const handleInputChange = e => {\n//   setValue(e.currentTarget.value.toLowerCase());\n// };\n\n// const handleSubmit = e => {\n//   e.preventDefault();\n\n//   if (value.trim() === '') {\n//     toast.error('Ð’Ñ‹ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð²Ð²ÐµÐ»Ð¸');\n//     return;\n//   }\n//   setQwery(value);\n//   resetValue();\n// };\n\n// const resetValue = () => {\n//   setValue('');\n// };\n\n// useEffect(() => {\n//   async function fetchIdCast() {\n//     try {\n//       const items = await getFetchFilms(qwery);\n//       setFilms(items);\n//     } catch (error) {\n//       toast.error(`Ð§Ñ‚Ð¾-Ñ‚Ð¾ Ð¿Ð¾ÑˆÐ»Ð¾ Ð½Ðµ Ñ‚Ð°Ðº`);\n//     }\n//   }\n\n//   if (qwery) {\n//     fetchIdCast();\n//   }\n// }, [qwery]);\n\n// <>\n//   <form onSubmit={handleSubmit}>\n//     <input\n//       type=\"text\"\n//       onChange={handleInputChange}\n//       value={value}\n//       autoComplete=\"off\"\n//       autoFocus\n//     />\n//     <button type=\"submit\">Search</button>\n//   </form>\n\n//   <ul>\n//     {films &&\n//       films.map(film => (\n//         <li key={film.id}>\n//           <Link to={`/movies/${film.id}`}>{film.original_title}</Link>\n//         </li>\n//       ))}\n//   </ul>\n// </>\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  &:hover {\n    color: #6149fc;\n  }\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  margin-top: 10px;\n`;\nexport const Li = styled.li`\n  padding: 5px;\n  font-weight: 600;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { StyledLink, Ul, Li } from './QueryFilms.styled';\n\nexport default function QueryFilms({ qwery }) {\n  let location = useLocation();\n  return (\n    <Ul>\n      {qwery.map(({ id, original_title }) => (\n        <Li key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            ðŸŽ¥ {original_title}\n          </StyledLink>\n        </Li>\n      ))}\n    </Ul>\n  );\n}\n\nQueryFilms.propTypes = {\n  qwery: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getFetchFilms } from 'services/axiosApi';\nimport MovieDetails from './MovieDetails/MovieDetails';\nimport QueryFilms from './QueryFilms/QueryFilms';\nimport { LoaderSpiner } from 'components/Loader/Loader';\n\nexport default function MoviesPage() {\n  const [qwery, setQwery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentSearch = searchParams.get('query');\n\n  useEffect(() => {\n    async function fetchFilms() {\n      try {\n        setLoading(true);\n        const values = await getFetchFilms(currentSearch);\n        if (values.length > 0) {\n          setQwery(values);\n        } else {\n          toast.error('Ð¤Ð¸Ð»ÑŒÐ¼ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½');\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (currentSearch) {\n      fetchFilms();\n    }\n  }, [currentSearch, setSearchParams]);\n\n  return (\n    <main>\n      <MovieDetails />\n\n      {loading && <LoaderSpiner />}\n\n      {qwery && <QueryFilms qwery={qwery} />}\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst KEY_API = 'a8a4168eeeb623f39ee02028275e7a3e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendFilms() {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n  return response.data.results;\n}\nexport async function getTrendFilmById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${KEY_API}`);\n  return response.data;\n}\nexport async function getCreditsById(id) {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${KEY_API}`);\n  return response.data.cast;\n}\nexport async function getReviewsById(id) {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${KEY_API}`);\n  return response.data.results;\n}\nexport async function getFetchFilms(item) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY_API}&query=${item}`\n  );\n  return response.data.results;\n}\n"],"names":["Input","styled","Form","Button","MovieDetails","useSearchParams","searchParams","setSearchParams","currentSearch","get","useState","value","setValue","onSubmit","e","preventDefault","query","toast","type","name","onChange","currentTarget","toLowerCase","autoComplete","StyledLink","Link","Ul","Li","QueryFilms","qwery","location","useLocation","map","id","original_title","to","state","from","MoviesPage","setQwery","loading","setLoading","useEffect","getFetchFilms","values","length","console","log","fetchFilms","Loader","KEY_API","getTrendFilms","axios","response","data","results","getTrendFilmById","getCreditsById","cast","getReviewsById","item"],"sourceRoot":""}